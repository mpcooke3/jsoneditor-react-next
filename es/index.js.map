{"version":3,"file":"index.js","sources":["../src/Editor.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport JSONEditor from 'jsoneditor/dist/jsoneditor-minimalist';\r\nimport './jsoneditor.css';\r\nimport './fixAce.css';\r\n\r\n/**\r\n * @typedef {{\r\n * tree: string,\r\n * view: string,\r\n * form: string,\r\n * code: string,\r\n * text: string,\r\n * allValues: Array<string>\r\n * }} TJsonEditorModes\r\n */\r\nconst modes = {\r\n    tree: 'tree',\r\n    view: 'view',\r\n    form: 'form',\r\n    code: 'code',\r\n    text: 'text'\r\n};\r\n\r\nconst values = Object.values(modes);\r\n\r\nmodes.allValues = values;\r\n\r\n/**\r\n * @type {object}\r\n * @property {object} [value]\r\n * @property {string} [mode='tree'] - Set the editor mode.\r\n * @property {string} [name=undefined] - Initial field name for the root node\r\n * @property {object} [schema] - Validate the JSON object against a JSON schema.\r\n * @property {object} [schemaRefs] - Schemas that are referenced using\r\n * the $ref property\r\n * @property {Function} [onChange] - Set a callback function\r\n * triggered when json in the JSONEditor change.\r\n * Will only be triggered on changes made by the user.\r\n * @property {Function} [onError] - Set a callback function triggered when an error occurs.\r\n * Invoked with the error as first argument.\r\n * The callback is only invoked for errors triggered by a users action,\r\n * like switching from code mode to tree mode or clicking\r\n * the Format button whilst the editor doesn't contain valid JSON.\r\n * @property {Function} [onModeChange] - Set a callback function\r\n * triggered right after the mode is changed by the user.\r\n * @property {object} [ace] - Provide a version of the Ace editor.\r\n * Only applicable when mode is code\r\n * @property {object} [ajv] - Provide a instance of ajv,\r\n * the library used for JSON schema validation.\r\n * @property {string} [theme] - Set the Ace editor theme,\r\n * uses included 'ace/theme/jsoneditor' by default.\r\n * @property {boolean} [history=false] - Enables history,\r\n * adds a button Undo and Redo to the menu of the JSONEditor. Only applicable when\r\n * mode is 'tree' or 'form'\r\n * @property {boolean} [navigationBar=true] - Adds navigation bar to the menu\r\n * the navigation bar visualize the current position on the\r\n * tree structure as well as allows breadcrumbs navigation.\r\n * @property {boolean} [statusBar=true] - Adds status bar to the buttom of the editor\r\n * the status bar shows the cursor position and a count of the selected characters.\r\n * Only applicable when mode is 'code' or 'text'.\r\n * @property {boolean} [search=true] - Enables a search box in\r\n * the upper right corner of the JSONEditor.\r\n * @property {Array<string>} [allowedModes] - Create a box in the editor menu where\r\n * the user can switch between the specified modes.\r\n * @property {(string|PropTypes.elementType)} [tag='div'] - Html element, or react element to render\r\n * @property {object} [htmlElementProps] - html element custom props\r\n * @property {Function} [innerRef] - callback to get html element reference\r\n * @property {boolean} [sortObjectKeys=false] If true, object keys in 'tree',\r\n * 'view' or 'form' mode list be listed alphabetically instead by their insertion order..\r\n */\r\nexport default class Editor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.htmlElementRef = null;\r\n        this.jsonEditor = null;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setRef = this.setRef.bind(this);\r\n        this.collapseAll = this.collapseAll.bind(this);\r\n        this.expandAll = this.expandAll.bind(this);\r\n        this.focus = this.focus.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {\r\n            allowedModes,\r\n            innerRef,\r\n            htmlElementProps,\r\n            tag,\r\n            onChange,\r\n            ...rest\r\n        } = this.props;\r\n\r\n        this.createEditor({\r\n            ...rest,\r\n            modes: allowedModes\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line react/sort-comp\r\n    componentDidUpdate({\r\n        allowedModes,\r\n        schema,\r\n        name,\r\n        theme,\r\n        schemaRefs,\r\n        innerRef,\r\n        htmlElementProps,\r\n        tag,\r\n        onChange,\r\n        ...rest\r\n    }) {\r\n        if (this.jsonEditor) {\r\n            if (theme !== this.props.theme) {\r\n                this.createEditor({\r\n                    ...rest,\r\n                    theme,\r\n                    modes: allowedModes\r\n                });\r\n            } else {\r\n                if (schema !== this.props.schema\r\n                    || schemaRefs !== this.props.schemaRefs\r\n                ) {\r\n                    this.jsonEditor.setSchema(schema, schemaRefs);\r\n                }\r\n\r\n                if (name !== this.jsonEditor.getName()) {\r\n                    this.jsonEditor.setName(name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate({ htmlElementProps }) {\r\n        return htmlElementProps !== this.props.htmlElementProps;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.destroy();\r\n            this.jsonEditor = null;\r\n        }\r\n    }\r\n\r\n    handleChange() {\r\n        if (this.props.onChange) {\r\n            try {\r\n                this.err = null;\r\n                const text = this.jsonEditor.getText();\r\n                if (text === '') {\r\n                    this.props.onChange(null);\r\n                }\r\n\r\n                const currentJson = this.jsonEditor.get();\r\n                if (this.props.value !== currentJson) {\r\n                    this.props.onChange(currentJson);\r\n                }\r\n            } catch (err) {\r\n                this.err = err;\r\n            }\r\n        }\r\n    }\r\n    \r\n    setRef(element) {\r\n        this.htmlElementRef = element;\r\n        if (this.props.innerRef) {\r\n            this.props.innerRef(element);\r\n        }\r\n    }\r\n\r\n    createEditor({ value, ...rest }) {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.destroy();\r\n        }\r\n\r\n        this.jsonEditor = new JSONEditor(this.htmlElementRef, {\r\n            onChange: this.handleChange,\r\n            ...rest\r\n        });\r\n\r\n        this.jsonEditor.set(value);\r\n    }\r\n\r\n    collapseAll() {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.collapseAll();\r\n        }\r\n    }\r\n\r\n    expandAll() {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.expandAll();\r\n        }\r\n    }\r\n\r\n    focus() {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            htmlElementProps,\r\n            tag\r\n        } = this.props;\r\n\r\n        return React.createElement(\r\n            tag,\r\n            {\r\n                ...htmlElementProps,\r\n                ref: this.setRef\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nEditor.propTypes = {\r\n    //  jsoneditor props\r\n    value: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    mode: PropTypes.oneOf(values),\r\n    name: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    schemaRefs: PropTypes.object,\r\n    sortObjectKeys: PropTypes.bool,\r\n\r\n    onChange: PropTypes.func,\r\n    onError: PropTypes.func,\r\n    onModeChange: PropTypes.func,\r\n\r\n    ace: PropTypes.object,\r\n    ajv: PropTypes.object,\r\n    theme: PropTypes.string,\r\n    history: PropTypes.bool,\r\n    navigationBar: PropTypes.bool,\r\n    statusBar: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    allowedModes: PropTypes.arrayOf(PropTypes.oneOf(values)),\r\n\r\n    //  custom props\r\n    tag: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\r\n    htmlElementProps: PropTypes.object,\r\n    innerRef: PropTypes.func,\r\n};\r\n\r\nEditor.defaultProps = {\r\n    tag: 'div',\r\n    mode: modes.tree,\r\n    history: false,\r\n    search: true,\r\n    navigationBar: true,\r\n    statusBar: true,\r\n    sortObjectKeys: false,\r\n};\r\n\r\n/**\r\n * @type TJsonEditorModes\r\n */\r\nEditor.modes = modes;\r\n"],"names":["modes","tree","view","form","code","text","values","Object","allValues","Editor","props","htmlElementRef","jsonEditor","handleChange","bind","setRef","collapseAll","expandAll","focus","allowedModes","innerRef","htmlElementProps","tag","onChange","rest","createEditor","schema","name","theme","schemaRefs","setSchema","getName","setName","destroy","err","getText","currentJson","get","value","element","JSONEditor","set","React","createElement","ref","Component","propTypes","PropTypes","oneOfType","object","array","mode","oneOf","string","sortObjectKeys","bool","func","onError","onModeChange","ace","ajv","history","navigationBar","statusBar","search","arrayOf","elementType","defaultProps"],"mappings":"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"}